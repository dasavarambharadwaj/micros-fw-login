version: "3.8"

services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION_MINUTES: ${JWT_EXPIRATION_MINUTES}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DB: ${MYSQL_DATABASE}
      WDS_SOCKET_HOST: 127.0.0.1
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./Backend:/usr/src/app # Mount local code to the container for live changes
      - /usr/src/app/node_modules # Ensure node_modules are handled properly

  database:
    build:
      context: ./Database
      dockerfile: Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  ui:
    build:
      context: ./UI
      dockerfile: Dockerfile.dev
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
        REACT_APP_API_VERSION: ${REACT_APP_API_VERSION}
        REACT_APP_REDIRECT_URL: ${REACT_APP_REDIRECT_URL}
    environment:
      WDS_SOCKET_HOST: 127.0.0.1
      CHOKIDAR_USEPOLLING: true
      WATCHPACK_POLLING: true
    ports:
      - "4000:3000"
    depends_on:
      - backend
    volumes:
      - ./UI:/app # Mount local code to the container for live changes
      - /app/node_modules # Ensure node_modules are handled properly
